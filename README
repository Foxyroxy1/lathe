Lathe is meant to be a collection of utility libraries that don't
really have a specific purpose other than to make their host language
smoother to program in (at least according to one opinion). In
particular, I'm starting it up so that I have somewhere to post little
things I'm doing in Arc, so that I can talk about them at the Arc
forum. Other languages are not off-limits.

Right now, this contains:

  - a very young Arc module system based on renaming of global
      variables (arc/modules/);
  - a young multimethod system built up within that module system
      (arc/multival/);
  - some general-purpose modules the multimethod system relies on
      (arc/amb.arc, arc/rules.arc, and arc/utils.arc);
  - randomly, a module containing an updated version of Andrew
      Wilcox's 'extend macro so that extensions can be removed and
      replaced (arc/extend.arc); and finally
  - very small examples of using the module system and the multimethod
      system in application code (arc/examples/), which double as the
      only test cases to date.

The examples (and therefore the tests) don't cover everything Lathe
has to offer. The code is fairly well commented, so reading those
comments is probably one of the best ways to get a good feel for
things.


== Setup in Arc ==

The code in the arc/ directory is targeted mainly at Arc 3.1, which
you can download at http://ycombinator.com/arc/arc3.1.tar. Arc 3.1
itself depends on MzScheme. For more detailed help setting up Arc,
including how to adjust it to work on Windows, arclanguage.org is a
good resource.

Besides the official Arc 3.1, two other Arc setups are supported: The
Anarki fork (http://github.com/nex3/arc) and the Java-based
interpreter Rainbow (http://github.com/conanite/rainbow).

To use the code, add this to your libs.arc (here assuming you put the
contents of the Lathe arc/ folder into lib/lathe/ in your Arc setup):

  (= lathe-dir* "lib/lathe/")
  (load:+ lathe-dir* "loadfirst.arc")

The lathe-dir* global variable is necessary; the loadfirst.arc code
uses it to determine where to load other lathe files from.